<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity3">
<!--    ConstraintLayout可以按照比例约束控件位置和尺寸，
        能够更好地适配屏幕大小不同的机型。-->
<!--    相对定位的常用属性：-->
<!--    layout_constraintLeft_toLeftOf-->
<!--    layout_constraintLeft_toRightOf-->
<!--    layout_constraintRight_toLeftOf-->
<!--    layout_constraintRight_toRightOf-->
<!--    layout_constraintTop_toTopOf-->
<!--    layout_constraintTop_toBottomOf-->
<!--    layout_constraintBottom_toTopOf-->
<!--    layout_constraintBottom_toBottomOf-->
<!--    layout_constraintBaseline_toBaselineOf-->
<!--    layout_constraintStart_toEndOf-->
<!--    layout_constraintStart_toStartOf-->
<!--    layout_constraintEnd_toStartOf-->
<!--    layout_constraintEnd_toEndOf-->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="horizontal">

        <TextView
            android:id="@+id/TextView1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="TextView1"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

<!--        文本对齐，这个时候就可以使用layout_constraintBaseline_toBaselineOf-->
        <TextView
            android:id="@+id/TextView2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="TextView2"
            app:layout_constraintLeft_toRightOf="@+id/TextView1"
            app:layout_constraintBaseline_toBaselineOf="@+id/TextView1"
            />

        <TextView
            android:id="@+id/TextView3"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="TextView3"
            app:layout_constraintTop_toBottomOf="@+id/TextView1"
            app:layout_constraintLeft_toLeftOf="@+id/TextView1"/>

<!--    角度定位
        TextView2的中心在TextView1的中心的120度，距离为150dp-->
        <TextView
            android:id="@+id/TextView4"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:layout_constraintCircle="@+id/TextView3"
            app:layout_constraintCircleAngle="120"
            app:layout_constraintCircleRadius="150dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            android:text="TextView4"/>
<!--        TextView1的位置应该是距离边框的左边和上面有一个10dp的边距，-->
<!--        但是在ConstraintLayout里，是不生效的，因为没有约束TextView1在布局里-->
<!--        的位置-->
        <TextView
            android:id="@+id/TextView5"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginLeft="30dp"
            android:layout_marginTop="30dp"
            android:text="TextView5"
            app:layout_constraintLeft_toLeftOf="@id/TextView3"
            app:layout_constraintTop_toTopOf="@id/TextView3"/>

    </androidx.constraintlayout.widget.ConstraintLayout>



</androidx.constraintlayout.widget.ConstraintLayout>